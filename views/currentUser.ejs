<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WanderScript - Profile</title>
    <link rel="stylesheet" href="/css/profile.css" />
    <style>
        .read-toggle-btn {
            background: none;
            border: none;
            color: #00d4ff;
            cursor: pointer;
            margin-top: 5px;
            font-weight: bold;
        }

        .comments-container {
            background: #1e1e1e;
            padding: 1rem;
            margin-top: 10px;
            border-radius: 8px;
            width: 100%;
            display: block;
        }

        .post-actions {
            display: flex;
            gap: 10px;
            margin-top: 12px;
        }

        .comments-container.hidden {
            display: none;
        }

        .comment {
            margin-top: 10px;
            padding: 5px 10px;
            border-left: 2px solid #00d4ff44;
        }

        .comment button {
            background: none;
            border: none;
            color: #00d4ff;
            margin-right: 10px;
            cursor: pointer;
            padding: 6px 12px;
        }

        .comment-form textarea {
            width: 100%;
            padding: 5px;
            margin-bottom: 5px;
            background: #2e2e2e;
            color: white;
            border: 1px solid #444;
            border-radius: 4px;
        }

        .comment-form button {
            padding: 4px 10px;
            background: #00d4ff;
            border: none;
            color: black;
            font-weight: bold;
            border-radius: 5px;
            cursor: pointer;
        }

        .comment-toggle-wrapper {
            margin-top: 10px 0;
        }

        .comment-toggle-wrapper .comment-toggle {
            background-color: #222;
            color: #00d4ff;
            border: 1px solid #00d4ff88;
            padding: 6px 12px;
            border-radius: 6px;
            font-weight: bold;
            transition: background 0.2s ease;
        }

        .comment-toggle-wrapper .comment-toggle:hover {
            background-color: #00d4ff22;
            color: #00ffff;
        }

        .btn-delete img {
            height: 18px;
            width: 18px;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <a href="/WanderScript/homefeed"><img src="/assets/icons8-home-50.png" alt="home"></a>
        <span class="username">@<%= user.username %></span>
    </nav>

    <div class="profile-wrapper">
        <div class="profile-header">
            <div class="bio">
                <h3>Bio</h3>
                <p>
                    <%= user.bio %>
                </p>
            </div>

            <div class="stats">
                <div><strong>Posts</strong><br>
                    <%= user.posts.length %>
                </div>
                <div><strong>UpVotes</strong><br>
                    <%= user.totalUpvotes %>
                </div>
                <div><strong>Followers</strong><br>
                    <%= user.followers.length %>
                </div>
            </div>

            <div class="new-post-card">
                <a href="/WanderScript/posts/new">
                    <div class="post-icon"><img src="/assets/icons8-new-post-24.png" alt="newPost"></div>
                    <div class="post-text">Post</div>
                </a>
            </div>
        </div>

        <div class="action-buttons">
            <a href="/WanderScript/profile/edit" class="action-btn edit-profile"><img
                    src="/assets/edit-info_9977203.png" alt="edit"> Edit Profile</a>
            <a href="/WanderScript/profile/dashboard" class="action-btn dashboard"><img
                    src="/assets/icons8-dashboard-64-2.png" alt="dashboard"> Dashboard</a>
        </div>

        <% user.posts.forEach(post=> {
            const shortDesc = post.info.length > 150 ? post.info.substring(0, 150) + '...' : post.info;
            const fullDesc = post.info;
            %>
            <div class="post-card">
                <h4>
                    <%= post.title %>
                </h4>

                <p class="post-description" id="desc-<%= post._id %>">
                    <%= shortDesc %>
                </p>

                <% if (post.info.length> 150) { %>
                    <button class="read-toggle-btn" onclick="toggleReadMore(this, '<%= post._id %>')"
                        data-full="<%= fullDesc.replace(/" /g, '&quot;' ) %>"
                        data-short="<%= shortDesc.replace(/"/g, '&quot;' ) %>">
                            Read more...
                    </button>
                    <% } %>

                        <div class="post-footer">
                            <span class="upvote-badge">
                                <img src="/assets/file-upload_6318412.png" alt="â¬†" class="upvote-icon" />
                                <span class="upvote-text">Up Votes</span>
                                (<%= post.upvotes %>)
                            </span>

                            <!-- ðŸ’¬ Comment Toggle Button -->
                            <div class="comment-toggle-wrapper">
                                <button class="read-toggle-btn comment-toggle" data-postid="<%= post._id %>">
                                    ðŸ’¬ Comments
                                </button>
                            </div>

                            <!-- ðŸ”½ Comments Section -->
                            <div class="comments-container hidden" id="comments-<%= post._id %>">
                                <form class="comment-form" data-postid="<%= post._id %>">
                                    <textarea name="content" placeholder="Add a comment..." required></textarea>
                                    <input type="hidden" name="parentID" value="">
                                    <button type="submit">Post</button>
                                </form>
                                <div class="comments-list"></div>
                            </div>

                            <div class="post-actions">

                                <button type="button" class="btn-delete" onclick="deletePost('<%= post._id %>')">
                                    <img src="/assets/icons8-delete-24.png" alt=""> Delete Post
                                </button>

                                <form action="/WanderScript/posts/edit/<%= post._id %>" method="GET"
                                    style="display: inline;">
                                    <button type="submit" class="btn-edit">
                                        <img src="/assets/icons8-edit-64.png" alt=""> Edit Post
                                    </button>
                                </form>

                            </div>
                        </div>
            </div>
            <% }) %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        function deletePost(postID) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This post will be permanently deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#00d4ff',
                cancelButtonColor: '#555',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/WanderScript/posts/delete/${postID}`, {
                        method: 'DELETE'
                    }).then(res => {
                        if (res.ok) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: 'Your post has been deleted.',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload(); // Or use window.location.href = '/WanderScript/profile';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Failed',
                                text: 'Could not delete the post.'
                            });
                        }
                    });
                }
            });
        }

        const currentUserID = "<%= user._id %>";
        const postIDToOwnerMap = { <% user.posts.forEach((post, i) => { %>
            "<%= post._id %>": "<%= user._id %>" <%= i < user.posts.length - 1 ? ',' : '' %>
<% }) %> };

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.comment-toggle').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const pid = btn.dataset.postid;
                    const container = document.getElementById(`comments-${pid}`);
                    container.classList.toggle('hidden');
                    if (!container.classList.contains('loaded')) {
                        const resp = await fetch(`/WanderScript/comments/${pid}`);
                        const data = await resp.json();
                        if (data.success) {
                            renderComments(container.querySelector('.comments-list'), data.comments, pid);
                            container.classList.add('loaded');
                        }
                    }
                });
            });

            document.querySelectorAll('.comment-form').forEach(form => {
                form.addEventListener('submit', async e => {
                    e.preventDefault();
                    const pid = form.dataset.postid;
                    const res = await fetch(`/WanderScript/comments/${pid}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ content: form.content.value, parentID: form.parentID.value })
                    });
                    if (res.ok) {
                        form.content.value = '';
                        form.parentID.value = '';
                        const updated = await fetch(`/WanderScript/comments/${pid}`);
                        const result = await updated.json();
                        if (result.success) {
                            const list = form.closest('.comments-container').querySelector('.comments-list');
                            list.innerHTML = '';
                            renderComments(list, result.comments, pid);
                        }
                    }
                });
            });
        });

        function renderComments(container, comments, postID, level = 0) {
            comments.forEach(comment => {
                const postOwn = postIDToOwnerMap[postID] === currentUserID;

                const wr = document.createElement('div');
                wr.className = 'comment';
                wr.style.marginLeft = level * 20 + 'px';

                wr.innerHTML = `
            <p><strong>@${comment.username}</strong>: ${comment.commentText}</p>
            <button class="reply-btn" data-commentid="${comment._id}" data-postid="${postID}">â†ª Reply</button>
            ${postOwn ? `<button class="delete-btn" data-id="${comment._id}" data-postid="${postID}">Delete</button>` : ''}
            <div class="replies"></div>
        `;

                container.appendChild(wr);

                if (comment.replies && comment.replies.length > 0) {
                    renderComments(wr.querySelector('.replies'), comment.replies, postID, level + 1);
                }
            });

            // Attach reply handlers
            container.querySelectorAll('.reply-btn').forEach(b => {
                b.onclick = () => {
                    const f = document.querySelector(`.comment-form[data-postid="${b.dataset.postid}"]`);
                    f.parentID.value = b.dataset.commentid;
                    f.content.focus();
                };
            });

            // Attach delete handlers
            container.querySelectorAll('.delete-btn').forEach(b => {
                b.onclick = async () => {
                    const commentID = b.dataset.id;
                    const postID = b.dataset.postid;

                    const result = await Swal.fire({
                        title: 'Are you sure?',
                        text: 'This will delete the comment and all its replies.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#00d4ff',
                        cancelButtonColor: '#555',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    });

                    if (result.isConfirmed) {
                        try {
                            const resp = await fetch(`/WanderScript/comments/delete/${commentID}`, {
                                method: 'POST'
                            });

                            if (resp.ok) {
                                const upd = await fetch(`/WanderScript/comments/${postID}`);
                                const dt = await upd.json();
                                if (dt.success) {
                                    const commentBox = document.querySelector(`#comments-${postID} .comments-list`);
                                    commentBox.innerHTML = '';
                                    renderComments(commentBox, dt.comments, postID);

                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: 'Comment and replies removed.',
                                        timer: 1500,
                                        showConfirmButton: false
                                    });
                                }
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Failed',
                                    text: 'Could not delete comment.'
                                });
                            }
                        } catch (err) {
                            console.error(err);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops!',
                                text: 'Something went wrong.'
                            });
                        }
                    }
                };
            });
        }
    </script>
</body>

</html>