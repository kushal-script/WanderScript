<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WanderScript - Profile</title>
    <link rel="stylesheet" href="/css/otherUser.css" />
    <style>
        .read-toggle-btn {
            background: none;
            border: none;
            color: #00d4ff;
            cursor: pointer;
            margin-top: 5px;
            font-weight: bold;
        }

        .upvote-btn {
            background-color: transparent;
            color: #ccc;
            border: 1px solid #00d4ff;
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease-in-out;
        }

        .upvote-btn.upvoted {
            background-color: #00ff2222;
            color: #47ff75;
            font-weight: bold;
            border: 1px solid #47ff75;
        }

        .comments-container {
            background: #1e1e1e;
            padding: 1rem;
            margin-top: 10px;
            border-radius: 8px;
            width: 100%;
            display: block;
        }

        .post-actions {
            display: flex;
            gap: 10px;
            margin-top: 12px;
        }

        .comments-container.hidden {
            display: none;
        }

        .comment {
            margin-top: 10px;
            padding: 5px 10px;
            border-left: 2px solid #00d4ff44;
        }

        .comment button {
            background: none;
            border: none;
            color: #00d4ff;
            margin-right: 10px;
            cursor: pointer;
            padding: 6px 12px;
        }

        .comment-form textarea {
            width: 100%;
            padding: 5px;
            margin-bottom: 5px;
            background: #2e2e2e;
            color: white;
            border: 1px solid #444;
            border-radius: 4px;
        }

        .comment-form button {
            padding: 4px 10px;
            background: #00d4ff;
            border: none;
            color: black;
            font-weight: bold;
            border-radius: 5px;
            cursor: pointer;
        }

        .comment-toggle-wrapper {
            margin-top: 10px 0;
        }

        .comment-toggle-wrapper .comment-toggle {
            background-color: #222;
            color: #00d4ff;
            border: 1px solid #00d4ff88;
            padding: 6px 12px;
            border-radius: 6px;
            font-weight: bold;
            transition: background 0.2s ease;
        }

        .comment-toggle-wrapper .comment-toggle:hover {
            background-color: #00d4ff22;
            color: #00ffff;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <a href="/Wanderscript/homefeed"><img src="/assets/icons8-home-50.png" alt="home"></a>
        <a href="/WanderScript/profile" class="username">@<%= currentUser.username %></a>
        <div class="icons">
            <% if (user.linkedin) { %>
                <a href="<%= user.linkedin %>" target="_blank" rel="noopener noreferrer">
                    <img src="/assets/linkedin_3536569.png" alt="LinkedIn">
                </a>
                <% } %>

                    <% if (user.instagram) { %>
                        <a href="<%= user.instagram %>" target="_blank" rel="noopener noreferrer">
                            <img src="/assets/instagram_1400829.png" alt="Instagram">
                        </a>
                        <% } %>

                            <% if (user.youtube) { %>
                                <a href="<%= user.youtube %>" target="_blank" rel="noopener noreferrer">
                                    <img src="/assets/youtube_1384028.png" alt="YouTube">
                                </a>
                                <% } %>
        </div>
    </nav>

    <div class="profile-wrapper">
        <div class="profile-header">

            <div class="profile-top">
                <h2 class="profile-username">@<%= user.username %>
                </h2>
                <div class="follow-wrapper">
                    <button class="<%= user.isFollowing ? 'unfollow-btn' : 'follow-btn' %> follow-toggle"
                        data-userid="<%= user._id %>" data-following="<%= user.isFollowing %>">
                        <%= user.isFollowing ? 'Following' : 'âž• Follow' %>
                    </button>
                </div>
            </div>

            <div class="bio-and-stats">
                <div class="bio">
                    <h3>Bio</h3>
                    <p>
                        <%= user.bio %>
                    </p>
                </div>

                <div class="stats">
                    <div><strong>Posts</strong><br>
                        <%= user.posts.length %>
                    </div>
                    <div><strong>UpVotes</strong><br>
                        <span id="total-upvotes">
                            <%= user.totalUpvotes %>
                        </span>
                    </div>
                    <div><strong>Followers</strong><br>
                        <span id="total-followers">
                            <%= user.followers.length %>
                        </span>
                    </div>
                </div>
            </div>

            <div class="action-buttons">
                <a href="/WanderScript/user/<%= user._id %>/mail" class="action-btn edit-profile">
                    <span class="icon-text">
                        <img src="/assets/icons8-mail-50.png" alt="mail"> Mail
                    </span>
                </a>

                <a href="/WanderScript" class="action-btn dashboard">
                    <span class="icon-text">
                        <img src="/assets/icons8-message-50.png" alt="message"> Message
                    </span>
                </a>
            </div>
        </div>

        <% user.posts.forEach(post=> {
            const shortDesc = post.info.length > 150 ? post.info.substring(0, 150) + '...' : post.info;
            const fullDesc = post.info;
            %>
            <div class="post-card">
                <h4>
                    <%= post.title %>
                </h4>

                <p class="post-description" id="desc-<%= post._id %>">
                    <%= shortDesc %>
                </p>

                <% if (post.info.length> 150) { %>
                    <button class="read-toggle-btn" onclick="toggleReadMore(this, '<%= post._id %>')"
                        data-full="<%= fullDesc.replace(/" /g, '&quot;' ) %>"
                        data-short="<%= shortDesc.replace(/"/g, '&quot;' ) %>">
                            Read more...
                    </button>
                    <% } %>

                        <div class="post-footer">
                            <!-- Posted By Info -->

                            <!-- ðŸ’¬ Comment Toggle Button -->
                            <div class="comment-toggle-wrapper">
                                <button class="read-toggle-btn comment-toggle" data-postid="<%= post._id %>">
                                    ðŸ’¬ Comments
                                </button>
                            </div>

                            <!-- ðŸ”½ Comments Section -->
                            <div class="comments-container hidden" id="comments-<%= post._id %>">
                                <form class="comment-form" data-postid="<%= post._id %>">
                                    <textarea name="content" placeholder="Add a comment..." required></textarea>
                                    <input type="hidden" name="parentID" value="">
                                    <button type="submit">Post</button>
                                </form>
                                <div class="comments-list"></div>
                            </div>

                            <!-- Upvote & Follow Buttons -->
                            <div class="post-actions">
                                <button class="btn-edit upvote-btn" data-postid="<%= post._id %>"
                                    data-isupvoted="<%= post.isUpvoted ? 'true' : 'false' %>">
                                    <%= post.isUpvoted ? `Upvoted (${post.upvotes})` : `âž• Upvote (${post.upvotes})` %>
                                </button>
                            </div>

                        </div>
            </div>
            <% }) %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function toggleReadMore(btn, postID) {
            const desc = document.getElementById(`desc-${postID}`);
            const fullText = btn.getAttribute("data-full");
            const shortText = btn.getAttribute("data-short");

            if (btn.textContent.includes("Read more")) {
                desc.textContent = fullText;
                btn.textContent = "Read less";
            } else {
                desc.textContent = shortText;
                btn.textContent = "Read more...";
            }
        }
        document.addEventListener('DOMContentLoaded', () => {
            const followBtn = document.querySelector('.follow-toggle');
            if (followBtn) {
                followBtn.addEventListener('click', async () => {
                    const userID = followBtn.dataset.userid;
                    const isFollowing = followBtn.dataset.following === 'true';
                    const endpoint = isFollowing
                        ? `/WanderScript/unfollow/${userID}`
                        : `/WanderScript/follow/${userID}`;

                    const response = await fetch(endpoint, { method: 'POST' });
                    const result = await response.json();

                    if (result.success) {
                        followBtn.dataset.following = result.isFollowing;
                        followBtn.textContent = result.isFollowing ? 'Following' : 'âž• Follow';
                        followBtn.className = result.isFollowing ? 'unfollow-btn follow-toggle' : 'follow-btn follow-toggle';

                        const followerCountElem = document.getElementById('total-followers');
                        if (followerCountElem) {
                            let current = parseInt(followerCountElem.textContent);
                            followerCountElem.textContent = result.isFollowing ? current + 1 : current - 1;
                        }
                    }
                });
            }

            document.querySelectorAll('.upvote-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const postID = btn.dataset.postid;

                    const response = await fetch(`/WanderScript/posts/upvote/${postID}`, {
                        method: 'POST'
                    });

                    const result = await response.json();
                    if (result.success) {
                        btn.textContent = result.isUpvoted
                            ? `Upvoted (${result.newUpvoteCount})`
                            : `âž• Upvote (${result.newUpvoteCount})`;

                        btn.dataset.isupvoted = result.isUpvoted;

                        btn.classList.toggle('upvoted', result.isUpvoted);

                        const totalUpvotesElem = document.getElementById('total-upvotes');
                        if (totalUpvotesElem) {
                            let current = parseInt(totalUpvotesElem.textContent);
                            totalUpvotesElem.textContent = result.isUpvoted ? current + 1 : current - 1;
                        }
                    }
                });

                if (btn.dataset.isupvoted === 'true') {
                    btn.classList.add('upvoted');
                }
            });
        });

        document.addEventListener('DOMContentLoaded', () => {
            // Toggle comments section
            // COMMENT TOGGLE BUTTON (ðŸ’¬ open/close)
            document.querySelectorAll('.comment-toggle').forEach(btn => {
                btn.onclick = async () => {
                    const postID = btn.dataset.postid;
                    const container = document.getElementById(`comments-${postID}`);
                    container.classList.toggle('hidden');

                    if (!container.classList.contains('loaded')) {
                        const resp = await fetch(`/WanderScript/comments/${postID}`);
                        const data = await resp.json();
                        if (data.success) {
                            renderComments(container.querySelector('.comments-list'), data.comments, postID);
                            container.classList.add('loaded');
                        }
                    }
                };
            });

            // Submit comment form (add or reply)
            document.querySelectorAll('.comment-form').forEach(form => {
                form.addEventListener('submit', async e => {
                    e.preventDefault();
                    const postID = form.dataset.postid;
                    const content = form.content.value.trim();
                    const parentID = form.parentID.value;

                    if (!content) return;

                    const res = await fetch(`/WanderScript/comments/${postID}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ content, parentID })
                    });

                    if (res.ok) {
                        form.content.value = '';
                        form.parentID.value = '';
                        const updated = await fetch(`/WanderScript/comments/${postID}`);
                        const data = await updated.json();
                        if (data.success) {
                            const commentList = form.closest('.comments-container').querySelector('.comments-list');
                            commentList.innerHTML = '';
                            renderComments(commentList, data.comments, postID);
                        }
                    }
                });
            });
        });

        // Recursive comment rendering
        function renderComments(container, comments, postID, level = 0) {
            comments.forEach(comment => {
                const wrapper = document.createElement('div');
                wrapper.className = 'comment';
                wrapper.style.marginLeft = `${level * 20}px`;

                const user = comment.username;
                const content = comment.commentText;
                const isOwner = comment.userID === '<%= currentUser.id %>';

                wrapper.innerHTML = `
            <p><strong>@${user}</strong>: ${content}</p>
            <button class="reply-btn" data-commentid="${comment._id}" data-postid="${postID}">â†ª Reply</button>
            ${isOwner ? `<button class="delete-btn" data-id="${comment._id}">Delete</button>` : ''}
            <div class="replies"></div>
        `;

                container.appendChild(wrapper);

                if (comment.replies && comment.replies.length > 0) {
                    renderComments(wrapper.querySelector('.replies'), comment.replies, postID, level + 1);
                }
            });

            // Handle reply
            container.querySelectorAll('.reply-btn').forEach(btn => {
                btn.onclick = () => {
                    const commentID = btn.dataset.commentid;
                    const postID = btn.dataset.postid;
                    const form = document.querySelector(`.comment-form[data-postid="${postID}"]`);
                    form.parentID.value = commentID;
                    form.content.focus();
                };
            });

            // Handle delete
            container.querySelectorAll('.delete-btn').forEach(btn => {
                btn.onclick = async () => {
                    const commentID = btn.dataset.id;

                    const result = await Swal.fire({
                        title: 'Are you sure?',
                        text: 'This will delete the comment and all its replies.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#00d4ff',
                        cancelButtonColor: '#555',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    });

                    if (result.isConfirmed) {
                        const res = await fetch(`/WanderScript/comments/delete/${commentID}`, { method: 'POST' });
                        if (res.ok) {
                            const updated = await fetch(`/WanderScript/comments/${postID}`);
                            const data = await updated.json();
                            if (data.success) {
                                const commentList = container;
                                commentList.innerHTML = '';
                                renderComments(commentList, data.comments, postID);

                                Swal.fire({
                                    icon: 'success',
                                    title: 'Deleted!',
                                    text: 'Comment and replies deleted.',
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            }
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Failed to delete comment.'
                            });
                        }
                    }
                };
            });
        }
    </script>
</body>

</html>