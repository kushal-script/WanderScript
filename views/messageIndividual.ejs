<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>@<%= otherUser.username %> - WanderScript</title>
    <link rel="stylesheet" href="/css/messageIndividual.css">
</head>

<body>
    <div class="page-container">
        <div class="chat-card">
            <nav class="chat-nav">
                <a href="/WanderScript/messages" class="nav-btn"><img src="/assets/icons8-message-50.png" alt="message" />Messages</a>
                <a href="/WanderScript/user/<%=otherUserID%>" class="nav-user">@<%= otherUser.username %></a>
                <!-- <div class="nav-phone">
                    <a href=""><img class="call" src="/assets/icons8-outgoing-call-50.png" alt="ðŸ“ž"></a>
                </div> -->
            </nav>

            <div class="chat-box">
                <% let lastDate = null; %>
                <% messages.forEach((msg, index) => {
                    const msgDate = new Date(msg.createdAt).toLocaleDateString('en-IN', {
                        year: 'numeric', month: 'long', day: 'numeric'
                    });

                    const msgTime = new Date(msg.createdAt).toLocaleTimeString('en-IN', {
                        hour: '2-digit', minute: '2-digit'
                    });

                    const isMe = msg.senderID.toString() === currentUserID.toString(); // Ensure comparison is with strings
                %>

                    <% if (msgDate !== lastDate) { lastDate = msgDate; %>
                        <div class="date-header"><%= msgDate %></div>
                    <% } %>

                    <div class="message-row <%= isMe ? 'me' : 'other' %>">
                        <% if (isMe) { %>
                            <span class="msg-time outside left"><%= msgTime %></span>
                        <% } %>

                        <div class="message <%= !isMe ? 'dimmed' : '' %>" id="message-<%= msg._id %>">
                            <% if (msg.replyTo && msg.replyTo.content) { %>
                                <div class="reply-reference">Replying to: "<%= msg.replyTo.content %>"</div>
                            <% } %>

                            <span class="msg-content"><%= msg.content %></span>
                            <% if (msg.edited) { %>
                                <span class="edited-badge">(Edited)</span>
                            <% } %>


                            <% if (isMe) {
                                const now = new Date();
                                const diff = (now - new Date(msg.createdAt)) / (1000 * 60 * 60);
                                if (diff < 1) { %>
                                    <div class="msg-options">
                                        <button class="msg-dropdown-btn">â‹¯</button>
                                        <div class="msg-dropdown">
                                            <button onclick="startEdit('<%= msg._id %>')">Edit</button>
                                            <button onclick="deleteMessage('<%= msg._id %>')">Delete</button>
                                        </div>
                                    </div>
                            <%  } } %>

                            <div class="edit-container" style="display: none;">
                                <input type="text" class="edit-input" value="<%= msg.content %>" />
                                <div class="edit-actions">
                                    <button onclick="submitEdit('<%= msg._id %>')">Save</button>
                                </div>
                            </div>

                            <button class="reply-btn" onclick="setReply('<%= msg._id %>', `<%= msg.content %>`)">â†© Reply</button>
                        </div>

                        <% if (!isMe) { %>
                            <span class="msg-time outside right"><%= msgTime %></span>
                        <% } %>
                    </div>
                <% }); %>

                <%
                  // Logic for "Seen" label
                  let showSeenLabel = false;
                  if (messages.length > 0) {
                      const lastMessage = messages[messages.length - 1];
                      const lastMessageSentByMe = lastMessage.senderID.toString() === currentUserID.toString();

                      const otherUserHasSeenThread = thread && !thread.unreadBy.map(id => id.toString()).includes(otherUserID.toString());

                      if (lastMessageSentByMe && otherUserHasSeenThread) {
                          showSeenLabel = true;
                      }
                  }
                %>
                <% if (showSeenLabel) { %>
                    <div class="seen-label">Seen</div>
                <% } %>
            </div>

            <div id="reply-preview" class="reply-preview" style="display: none;">
                <span class="preview-text"></span>
                <button type="button" onclick="cancelReply()">âœ–</button>
            </div>

            <form class="chat-input" method="POST" action="/WanderScript/messages/<%= otherUser.userID %>/send">
                <input type="hidden" name="replyTo" id="replyToInput" />
                <input type="text" name="content" placeholder="Type a message..." required />
                <button type="submit" class="send-icon">âž¤</button>
            </form>
        </div>
    </div>

    <script>
        document.querySelectorAll('.msg-dropdown-btn').forEach(button => {
            button.addEventListener('click', e => {
                e.stopPropagation();
                button.nextElementSibling.classList.toggle('show');
            });
        });

        document.addEventListener('click', () => {
            document.querySelectorAll('.msg-dropdown').forEach(d => d.classList.remove('show'));
        });

        function setReply(messageID, content) {
            const replyPreview = document.getElementById('reply-preview');
            const replyInput = document.getElementById('replyToInput');
            replyPreview.style.display = 'flex';
            // Use innerText for security against XSS in dynamic content
            replyPreview.querySelector('.preview-text').innerText = content;
            replyInput.value = messageID;
        }

        async function deleteMessage(msgID) {
            const res = await fetch(`/WanderScript/messages/${msgID}`, { method: 'DELETE' });
            const data = await res.json();
            if (data.success) location.reload();
            else alert(data.message);
        }

        function cancelReply() {
            document.getElementById('reply-preview').style.display = 'none';
            document.getElementById('replyToInput').value = '';
        }

        function startEdit(msgID) {
            const messageDiv = document.getElementById(`message-${msgID}`);
            const msgText = messageDiv.querySelector('.msg-content');
            const editContainer = messageDiv.querySelector('.edit-container');

            msgText.style.display = 'none';
            editContainer.style.display = 'flex';

            const replyBtn = messageDiv.querySelector('.reply-btn');
            if (replyBtn) {
                replyBtn.style.display = 'none';
            }
        }

        async function submitEdit(msgID) {
            const messageDiv = document.getElementById(`message-${msgID}`);
            const input = messageDiv.querySelector('.edit-input');
            const newContent = input.value.trim();

            if (!newContent) return alert("Message can't be empty.");

            const res = await fetch(`/WanderScript/messages/${msgID}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ content: newContent })
            });

            const data = await res.json();
            if (data.success) {
                location.reload();
            } else {
                alert(data.message);
            }
        }
    </script>
</body>

</html>